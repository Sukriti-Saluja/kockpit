{
	"name": "MergCols",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MergCol",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MergColsOutput",
						"type": "DatasetReference"
					},
					"name": "Sink"
				}
			],
			"transformations": [
				{
					"name": "AddConstant"
				},
				{
					"name": "ADDRowNum"
				},
				{
					"name": "FilterRowNum"
				},
				{
					"name": "DropColumns"
				}
			],
			"script": "source(output(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(Column_1 = iif(isNull(Column_1), 'ID', Column_1),\n\t\tRowNum = 1) ~> AddConstant\nAddConstant window(asc(RowNum, true),\n\tROWNUM = rowNumber()) ~> ADDRowNum\nADDRowNum filter(ADDRowNum@ROWNUM>=3) ~> FilterRowNum\nFilterRowNum select(mapColumn(\n\t\tColumn_1,\n\t\tColumn_2,\n\t\tColumn_3,\n\t\tColumn_4,\n\t\tColumn_5,\n\t\tColumn_6,\n\t\tColumn_7\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DropColumns\nDropColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MergColsOutput'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> Sink"
		}
	}
}